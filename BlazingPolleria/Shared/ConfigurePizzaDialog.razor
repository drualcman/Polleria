@inject HttpClient HttpClient
@inject ServerUrlService ServerUrlService

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@Pollo.Special.Name</h2>
            @Pollo.Special.Description
        </div>
        <div class="dialog-body">
            <div>
                @if (Pollo.Toppings is not null && Pollo.Toppings.Any())
                {
                    <ul>
                        @foreach (var topping in Pollo.Toppings)
                        {
                            <li>
                                + @topping.Topping.Name
                                <button class="btn btn-danger" type="button" @onclick="() => Pollo.Toppings.Remove(topping)">-</button>
                            </li>
                        }
                    </ul>
                }
            </div>

            <div>
                @if (Toppings is null)
                {
                    <p>Cargando extras...</p>
                }
                else
                {
                    <ul>
                        @foreach (var topping in Toppings)
                        {
                            <li>
                                @topping.Name por S/.@topping.GetFormattedPrice()
                                <button class="btn btn-primary" type="button" @onclick="() => Pollo.Toppings.Add(new PolloTopping
                                    {
                                         Topping = topping,
                                         PolloId = Pollo.Id
                                    })">
                                    +
                                </button>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
        <div class="dialog-buttons">
            <button class="btn btn-secondary mr-auto" @onclick="OnCancel">Cancelar</button>
            <span class="mr-center">
                Precio: <span class="price">S/.@(Pollo.GetFormattedTotalPrice())</span>
            </span>
            <button class="btn btn-success ml-auto" @onclick="OnConfirm">Ordenar ></button>
        </div>
    </div>
</div>


@code {
    [Parameter] public Pollo Pollo { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    List<Topping> Toppings;

    protected override async Task OnInitializedAsync()
    {
        Toppings = await HttpClient.GetFromJsonAsync<List<Topping>>($"{ServerUrlService.GetServerBaseAddress()}toppings");
    }
        }
